{"version":3,"file":"shared.cjs.js","sources":["../src/index.ts"],"sourcesContent":["/* 公共函数 */\r\n\r\n/* 判断数据类型 */\r\nexport const isObject = (value) => typeof value == 'object' && value !== null // 是否是对象类型\r\nexport const isArray = Array.isArray\r\nexport const isFunction = (value) => typeof value == 'function'\r\nexport const isNumber = (value) => typeof value == 'number'\r\nexport const isString = (value) => typeof value == 'string'\r\nexport const isIntegerKey = (key) => parseInt(key) + '' === key // 判断是否是数组索引\r\n\r\nlet hasOwnProperty = Object.prototype.hasOwnProperty\r\nexport const hasOwn = (target, key) => hasOwnProperty.call(target, key) // 判断对象是否有该属性\r\n\r\nexport const hasChanged = (oldValue, value)=> oldValue !== value // 判断旧值和新修改的值，是否相等\r\n\r\nexport const extend = Object.assign // 合并对象"],"names":[],"mappings":";;;;AAAA;AAEA;MACa,QAAQ,GAAG,CAAC,KAAK,KAAK,OAAO,KAAK,IAAI,QAAQ,IAAI,KAAK,KAAK,KAAI;MAChE,OAAO,GAAG,KAAK,CAAC,QAAO;MACvB,UAAU,GAAG,CAAC,KAAK,KAAK,OAAO,KAAK,IAAI,WAAU;MAClD,QAAQ,GAAG,CAAC,KAAK,KAAK,OAAO,KAAK,IAAI,SAAQ;MAC9C,QAAQ,GAAG,CAAC,KAAK,KAAK,OAAO,KAAK,IAAI,SAAQ;MAC9C,YAAY,GAAG,CAAC,GAAG,KAAK,QAAQ,CAAC,GAAG,CAAC,GAAG,EAAE,KAAK,IAAG;AAE/D,IAAI,cAAc,GAAG,MAAM,CAAC,SAAS,CAAC,cAAc,CAAA;MACvC,MAAM,GAAG,CAAC,MAAM,EAAE,GAAG,KAAK,cAAc,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,EAAC;MAE1D,UAAU,GAAG,CAAC,QAAQ,EAAE,KAAK,KAAI,QAAQ,KAAK,MAAK;MAEnD,MAAM,GAAG,MAAM,CAAC,OAAM;;;;;;;;;;;;"}